<?php

declare(strict_types=1);

/*
 * PinterestAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PinterestAPILib\Models;

use stdClass;

/**
 * Model to create a new pin.
 */
class NewPin implements \JsonSerializable
{
    /**
     * @var string
     */
    private $id;

    /**
     * @var string
     */
    private $createdAt;

    /**
     * @var string
     */
    private $link;

    /**
     * @var string
     */
    private $title;

    /**
     * @var string
     */
    private $description;

    /**
     * @var string
     */
    private $dominantColor;

    /**
     * @var string
     */
    private $altText;

    /**
     * @var string
     */
    private $boardId;

    /**
     * @var string
     */
    private $boardSectionId;

    /**
     * @var Owner
     */
    private $boardOwner;

    /**
     * @var Media
     */
    private $media;

    /**
     * @var string
     */
    private $parentPinId;

    /**
     * @param string $id
     * @param string $createdAt
     * @param string $link
     * @param string $title
     * @param string $description
     * @param string $dominantColor
     * @param string $altText
     * @param string $boardId
     * @param string $boardSectionId
     * @param Owner $boardOwner
     * @param Media $media
     * @param string $parentPinId
     */
    public function __construct(
        string $id,
        string $createdAt,
        string $link,
        string $title,
        string $description,
        string $dominantColor,
        string $altText,
        string $boardId,
        string $boardSectionId,
        Owner $boardOwner,
        Media $media,
        string $parentPinId
    ) {
        $this->id = $id;
        $this->createdAt = $createdAt;
        $this->link = $link;
        $this->title = $title;
        $this->description = $description;
        $this->dominantColor = $dominantColor;
        $this->altText = $altText;
        $this->boardId = $boardId;
        $this->boardSectionId = $boardSectionId;
        $this->boardOwner = $boardOwner;
        $this->media = $media;
        $this->parentPinId = $parentPinId;
    }

    /**
     * Returns Id.
     * ID of the new pin.
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * ID of the new pin.
     *
     * @required
     * @maps id
     */
    public function setId(string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Created At.
     * Timestamp at which the pin is created.
     */
    public function getCreatedAt(): string
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     * Timestamp at which the pin is created.
     *
     * @required
     * @maps created_at
     */
    public function setCreatedAt(string $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Link.
     * Link to the created pin.
     */
    public function getLink(): string
    {
        return $this->link;
    }

    /**
     * Sets Link.
     * Link to the created pin.
     *
     * @required
     * @maps link
     */
    public function setLink(string $link): void
    {
        $this->link = $link;
    }

    /**
     * Returns Title.
     * Title of the created pin.
     */
    public function getTitle(): string
    {
        return $this->title;
    }

    /**
     * Sets Title.
     * Title of the created pin.
     *
     * @required
     * @maps title
     */
    public function setTitle(string $title): void
    {
        $this->title = $title;
    }

    /**
     * Returns Description.
     * Describes what the pin is about.
     */
    public function getDescription(): string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     * Describes what the pin is about.
     *
     * @required
     * @maps description
     */
    public function setDescription(string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Dominant Color.
     * States the dominant color of the created pin.
     */
    public function getDominantColor(): string
    {
        return $this->dominantColor;
    }

    /**
     * Sets Dominant Color.
     * States the dominant color of the created pin.
     *
     * @required
     * @maps dominant_color
     */
    public function setDominantColor(string $dominantColor): void
    {
        $this->dominantColor = $dominantColor;
    }

    /**
     * Returns Alt Text.
     * ALT text of the created pin.
     */
    public function getAltText(): string
    {
        return $this->altText;
    }

    /**
     * Sets Alt Text.
     * ALT text of the created pin.
     *
     * @required
     * @maps alt_text
     */
    public function setAltText(string $altText): void
    {
        $this->altText = $altText;
    }

    /**
     * Returns Board Id.
     * This is the board ID of the board in which the pin was created.
     */
    public function getBoardId(): string
    {
        return $this->boardId;
    }

    /**
     * Sets Board Id.
     * This is the board ID of the board in which the pin was created.
     *
     * @required
     * @maps board_id
     */
    public function setBoardId(string $boardId): void
    {
        $this->boardId = $boardId;
    }

    /**
     * Returns Board Section Id.
     * This is the board section ID of the parent board.
     */
    public function getBoardSectionId(): string
    {
        return $this->boardSectionId;
    }

    /**
     * Sets Board Section Id.
     * This is the board section ID of the parent board.
     *
     * @required
     * @maps board_section_id
     */
    public function setBoardSectionId(string $boardSectionId): void
    {
        $this->boardSectionId = $boardSectionId;
    }

    /**
     * Returns Board Owner.
     * States the owner of the board in which the pin is created.
     */
    public function getBoardOwner(): Owner
    {
        return $this->boardOwner;
    }

    /**
     * Sets Board Owner.
     * States the owner of the board in which the pin is created.
     *
     * @required
     * @maps board_owner
     */
    public function setBoardOwner(Owner $boardOwner): void
    {
        $this->boardOwner = $boardOwner;
    }

    /**
     * Returns Media.
     * Defines the type of media.
     */
    public function getMedia(): Media
    {
        return $this->media;
    }

    /**
     * Sets Media.
     * Defines the type of media.
     *
     * @required
     * @maps media
     */
    public function setMedia(Media $media): void
    {
        $this->media = $media;
    }

    /**
     * Returns Parent Pin Id.
     * This is the ID of parent pin.
     */
    public function getParentPinId(): string
    {
        return $this->parentPinId;
    }

    /**
     * Sets Parent Pin Id.
     * This is the ID of parent pin.
     *
     * @required
     * @maps parent_pin_id
     */
    public function setParentPinId(string $parentPinId): void
    {
        $this->parentPinId = $parentPinId;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['id']               = $this->id;
        $json['created_at']       = $this->createdAt;
        $json['link']             = $this->link;
        $json['title']            = $this->title;
        $json['description']      = $this->description;
        $json['dominant_color']   = $this->dominantColor;
        $json['alt_text']         = $this->altText;
        $json['board_id']         = $this->boardId;
        $json['board_section_id'] = $this->boardSectionId;
        $json['board_owner']      = $this->boardOwner;
        $json['media']            = $this->media;
        $json['parent_pin_id']    = $this->parentPinId;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
